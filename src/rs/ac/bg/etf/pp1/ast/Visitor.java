// generated with ast extension for cup
// version 0.8
// 24/0/2022 15:44:49


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(ReturnType ReturnType);
    public void visit(Mulop Mulop);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(Assignop Assignop);
    public void visit(MethodVarList MethodVarList);
    public void visit(CondTermList CondTermList);
    public void visit(ElemDec ElemDec);
    public void visit(ElemDeclList ElemDeclList);
    public void visit(Var Var);
    public void visit(StatementList StatementList);
    public void visit(Extends Extends);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(CondFactList CondFactList);
    public void visit(Return Return);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(RetType RetType);
    public void visit(Condition Condition);
    public void visit(Statements Statements);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(MethodVar MethodVar);
    public void visit(LabelDef LabelDef);
    public void visit(Label Label);
    public void visit(ExprList ExprList);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(DesAsgnErrFix DesAsgnErrFix);
    public void visit(DesObjArr DesObjArr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Const Const);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(DesObjArrList DesObjArrList);
    public void visit(DoWhile DoWhile);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(PrintNum PrintNum);
    public void visit(FormPar FormPar);
    public void visit(MethodVarDeclList MethodVarDeclList);
    public void visit(ClassFieldList ClassFieldList);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MethodVars MethodVars);
    public void visit(SingleStatement SingleStatement);
    public void visit(FormParamTypeName FormParamTypeName);
    public void visit(FormPars FormPars);
    public void visit(GtEqOperation GtEqOperation);
    public void visit(GtOperation GtOperation);
    public void visit(LeEqOperation LeEqOperation);
    public void visit(LeOperation LeOperation);
    public void visit(NotEqToOperation NotEqToOperation);
    public void visit(EqToOperation EqToOperation);
    public void visit(AssignOperation AssignOperation);
    public void visit(RemOperation RemOperation);
    public void visit(DivOperation DivOperation);
    public void visit(MulOperation MulOperation);
    public void visit(SubOperation SubOperation);
    public void visit(AddOperation AddOperation);
    public void visit(NoExpressionList NoExpressionList);
    public void visit(ExprLst ExprLst);
    public void visit(NoActParams NoActParams);
    public void visit(ActParams ActParams);
    public void visit(BrC BrC);
    public void visit(BrO BrO);
    public void visit(FactBracExpr FactBracExpr);
    public void visit(FactNewArr FactNewArr);
    public void visit(FactNewObj FactNewObj);
    public void visit(FactBoolConst FactBoolConst);
    public void visit(FactCharConst FactCharConst);
    public void visit(FactNumConst FactNumConst);
    public void visit(FactDesFun FactDesFun);
    public void visit(FactDes FactDes);
    public void visit(TermNoList TermNoList);
    public void visit(TermLst TermLst);
    public void visit(FactExpr FactExpr);
    public void visit(MulTerm MulTerm);
    public void visit(Negation Negation);
    public void visit(NoNegation NoNegation);
    public void visit(MinusMoreTerm MinusMoreTerm);
    public void visit(MoreTerm MoreTerm);
    public void visit(OneTerm OneTerm);
    public void visit(MinusOneTerm MinusOneTerm);
    public void visit(NoPrintNumber NoPrintNumber);
    public void visit(PrintNumber PrintNumber);
    public void visit(Print Print);
    public void visit(ReadDesignator ReadDesignator);
    public void visit(ReadOp ReadOp);
    public void visit(Read Read);
    public void visit(RetExpr RetExpr);
    public void visit(RetNoExpr RetNoExpr);
    public void visit(DoWle DoWle);
    public void visit(NoCondFactList NoCondFactList);
    public void visit(CondFactLst CondFactLst);
    public void visit(CondFactWithOp CondFactWithOp);
    public void visit(ConditionFact ConditionFact);
    public void visit(NoCondTermList NoCondTermList);
    public void visit(CondTermLst CondTermLst);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(Cond Cond);
    public void visit(DesArrName DesArrName);
    public void visit(DesArr DesArr);
    public void visit(DesNotArr DesNotArr);
    public void visit(DesAsgnErrorFixing DesAsgnErrorFixing);
    public void visit(DesLeftAsgn DesLeftAsgn);
    public void visit(DesStatementAsgnExprErrFix DesStatementAsgnExprErrFix);
    public void visit(DesStatementDec DesStatementDec);
    public void visit(DesStatementInc DesStatementInc);
    public void visit(DesStatementIsFun DesStatementIsFun);
    public void visit(DesStatementAsgnExpr DesStatementAsgnExpr);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(GotoSingleStm GotoSingleStm);
    public void visit(PrintSingleStm PrintSingleStm);
    public void visit(ReadSingleStm ReadSingleStm);
    public void visit(RetSingleStm RetSingleStm);
    public void visit(ContinueSingleStm ContinueSingleStm);
    public void visit(BreakSingleStm BreakSingleStm);
    public void visit(DoWhileSingleStm DoWhileSingleStm);
    public void visit(DesSingleStm DesSingleStm);
    public void visit(Lab Lab);
    public void visit(LabDef LabDef);
    public void visit(Stms Stms);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(StmsMatched StmsMatched);
    public void visit(StmNoLabel StmNoLabel);
    public void visit(StmLabel StmLabel);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementLst StatementLst);
    public void visit(FormParamArr FormParamArr);
    public void visit(FormParamNoArr FormParamNoArr);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParm FormParm);
    public void visit(NoFormParams NoFormParams);
    public void visit(FormParams FormParams);
    public void visit(MethodVarArray MethodVarArray);
    public void visit(MethodVarNoArray MethodVarNoArray);
    public void visit(NoMethodVarDeclList NoMethodVarDeclList);
    public void visit(MethodVarDeclLst MethodVarDeclLst);
    public void visit(MethodVarDeclaration MethodVarDeclaration);
    public void visit(MethodVarListOneElem MethodVarListOneElem);
    public void visit(MethodVarLst MethodVarLst);
    public void visit(NoMtdVars NoMtdVars);
    public void visit(MtdVars MtdVars);
    public void visit(RetTypeType RetTypeType);
    public void visit(ReturnTypeNoVoid ReturnTypeNoVoid);
    public void visit(ReturnTypeVoid ReturnTypeVoid);
    public void visit(MethTypeName MethTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethod NoMethod);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoClassField NoClassField);
    public void visit(ClassFieldLst ClassFieldLst);
    public void visit(NoExtendClass NoExtendClass);
    public void visit(ExtendClass ExtendClass);
    public void visit(ClassDeclarationMet ClassDeclarationMet);
    public void visit(ClassDeclarationNoMet ClassDeclarationNoMet);
    public void visit(VarArr VarArr);
    public void visit(VarNoArr VarNoArr);
    public void visit(VarDecListErr VarDecListErr);
    public void visit(VarDeclarationListErrFix VarDeclarationListErrFix);
    public void visit(NoVar NoVar);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(VarDeclErrFix VarDeclErrFix);
    public void visit(VarDeclFix VarDeclFix);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(Type Type);
    public void visit(BooleanConst BooleanConst);
    public void visit(CharachterConst CharachterConst);
    public void visit(NumberConst NumberConst);
    public void visit(NoConst NoConst);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(ClDec ClDec);
    public void visit(VaDecl VaDecl);
    public void visit(CoDecl CoDecl);
    public void visit(NoElemDecl NoElemDecl);
    public void visit(ElemDeclaration ElemDeclaration);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
